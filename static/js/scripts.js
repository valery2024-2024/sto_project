document.addEventListener('DOMContentLoaded', () => {
    console.log("JavaScript –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ —ñ –ø—Ä–∞—Ü—é—î!");

    // –í–∏–ø–∞–¥–∞—é—á–µ –º–µ–Ω—é
    const dropdownButton = document.querySelector('.dropdown-button');
    const dropdownMenu = document.querySelector('.dropdown-menu');

    if (dropdownButton && dropdownMenu) {
        dropdownButton.addEventListener('click', (e) => {
            e.preventDefault();
            dropdownMenu.style.display = dropdownMenu.style.display === 'block' ? 'none' : 'block';
            console.log("–ú–µ–Ω—é –≤—ñ–¥–∫—Ä–∏—Ç–æ!");
        });

        document.addEventListener('click', (e) => {
            if (!dropdownButton.contains(e.target) && !dropdownMenu.contains(e.target)) {
                dropdownMenu.style.display = 'none';
                console.log("–ú–µ–Ω—é –∑–∞–∫—Ä–∏—Ç–æ!");
            }
        });
    } else {
        console.log("Dropdown elements not found!");
    }
    document.addEventListener('DOMContentLoaded', () => {
        const dropdownButtons = document.querySelectorAll('.dropdown-button');
    
        dropdownButtons.forEach(button => {
            button.addEventListener('click', (e) => {
                e.preventDefault();
                const menu = button.nextElementSibling;
                
                // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –≤—Å—ñ –≤—ñ–¥–∫—Ä–∏—Ç—ñ –º–µ–Ω—é
                document.querySelectorAll('.dropdown-menu').forEach(dropdown => {
                    if (dropdown !== menu) {
                        dropdown.style.display = 'none';
                    }
                });
    
                // –ü–µ—Ä–µ–º–∏–∫–∞—î–º–æ —Å—Ç–∞–Ω –ø–æ—Ç–æ—á–Ω–æ–≥–æ –º–µ–Ω—é
                menu.style.display = menu.style.display === 'block' ? 'none' : 'block';
            });
        });
    
        // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –º–µ–Ω—é –ø—Ä–∏ –∫–ª—ñ–∫—É –∑–∞ –º–µ–∂–∞–º–∏
        document.addEventListener('click', (e) => {
            if (!e.target.closest('.dropdown')) {
                document.querySelectorAll('.dropdown-menu').forEach(menu => {
                    menu.style.display = 'none';
                });
            }
        });
    });

    document.getElementById("login-form").addEventListener("submit", async function(event) {
        event.preventDefault();
    
        let email = document.getElementById("email").value;
        let password = document.getElementById("password").value;
    
        let response = await fetch("/login", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({ email, password })
            //body: JSON.stringify({ email: email, password: password })
        });
    
        //let data = await response.json();
        let contentType = response.headers.get("content-type");
        if (contentType && contentType.includes("application/json")) {
            let data = await response.json();
        if (response.ok) {
            localStorage.setItem("access_token", data.access_token); // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ç–æ–∫–µ–Ω
            console.log("–û—Ç—Ä–∏–º–∞–Ω–∏–π —Ç–æ–∫–µ–Ω:", data.access_token);
            window.location.href = "/profile"; // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ –ø—Ä–æ—Ñ—ñ–ª—å
        } else {
            alert("–ü–æ–º–∏–ª–∫–∞ –≤—Ö–æ–¥—É: " + (data.msg || "–ù–µ–≤—ñ—Ä–Ω—ñ –¥–∞–Ω—ñ!"));
        }
        } else {
            let text = await response.text();
            console.error("‚ùå –ù–µ JSON:", text);
            alert("–°–µ—Ä–≤–µ—Ä –ø–æ–≤–µ—Ä–Ω—É–≤ –ø–æ–º–∏–ª–∫—É.");
        }        
    });
    
    document.addEventListener("DOMContentLoaded", async function loadProfile() {
        let token = localStorage.getItem("access_token");//–û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–∫–µ–Ω
    
        if (!token) {
            console.log("‚ùå –¢–æ–∫–µ–Ω –≤—ñ–¥—Å—É—Ç–Ω—ñ–π! –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞ –≤—Ö—ñ–¥.");
            window.location.href = "/login"; // –Ø–∫—â–æ —Ç–æ–∫–µ–Ω–∞ –Ω–µ–º–∞—î ‚Äî –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ –ª–æ–≥—ñ–Ω
            return;
        }
        
        console.log("üîß –¢–æ–∫–µ–Ω —É –∑–∞–≥–æ–ª–æ–≤–∫—É:", "Bearer " + token);

        try {
            //document.cookie = `access_token_cookie=${token}; path=/;`;
            let response = await fetch("/api/profile", {
                method: "GET",
                headers: {
                    "Authorization": "Bearer " + token,  // ‚úÖ –ü–µ—Ä–µ–¥–∞—î–º–æ —Ç–æ–∫–µ–Ω —É –∑–∞–≥–æ–ª–æ–≤–∫—É
                    "Content-Type": "application/json",
                },
                credentials: "include"  // –î–æ–¥–∞—î–º–æ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á—ñ –∫—É–∫—ñ—Å—ñ–≤
            });
        
    
            let data = await response.json();
            console.log("üìù –í—ñ–¥–ø–æ–≤—ñ–¥—å —Å–µ—Ä–≤–µ—Ä–∞:", data);
    
            if (response.ok) {
                document.getElementById("user-name").innerText = data.name;
                document.getElementById("user-email").innerText = data.email;
                console.log("‚úÖ –ü—Ä–æ—Ñ—ñ–ª—å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!");
                //document.getElementById("profile-info").innerText = `–ü—Ä–∏–≤—ñ—Ç, ${data.name}!`;
            } else {
                console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ—Å—Ç—É–ø—É: " + data.msg);
                //alert("–ü–æ–º–∏–ª–∫–∞ –¥–æ—Å—Ç—É–ø—É –¥–æ –ø—Ä–æ—Ñ—ñ–ª—é: " + data.msg);
                window.location.href = "/login"; // –Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞ ‚Äî –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –≤—Ö–æ–¥—É
            }
        } catch (error) {
            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é:", error);
        }
    });

    document.getElementById("logout").addEventListener("click", async function(event) {
        event.preventDefault(); // –ó—É–ø–∏–Ω—è—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π –ø–µ—Ä–µ—Ö—ñ–¥ –ø–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—é

        try {
            await fetch("/logout", { method: "POST" }); // –ó–∞–ø–∏—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Å–µ—Å—ñ—ó
            localStorage.removeItem("access_token"); // –í–∏–¥–∞–ª—è—î–º–æ —Ç–æ–∫–µ–Ω
            window.location.href = "/login"; // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –≤—Ö–æ–¥—É
        } catch (err) {
            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏—Ö–æ–¥—ñ:", err);
        }
    });
      
    // –ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞ –Ω–∞ –∫–ª—ñ—î–Ω—Ç—ñ
    //fetch('/login', {
       // method: 'POST',
        //headers: {
            //'Content-Type': 'application/json'
        //},
        //body: JSON.stringify({ email: 'newuser@example.com', password: 'password123' })
    //})
    //.then(response => response.json())
    //.then(data => {
        //console.log("üì• –û—Ç—Ä–∏–º–∞–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∑ —Å–µ—Ä–≤–µ—Ä–∞:", data);
        //if (data.access_token) {
            //localStorage.setItem('access_token', data.access_token);  // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ç–æ–∫–µ–Ω —É LocalStorage
           // console.log("‚úÖ –¢–æ–∫–µ–Ω –∑–±–µ—Ä–µ–∂–µ–Ω–æ:", localStorage.getItem('access_token'));
           // alert('–£—Å–ø—ñ—à–Ω–∏–π –≤—Ö—ñ–¥!');
           // window.location.href = '/profile';  // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –ø—Ä–æ—Ñ—ñ–ª—é
        //} else {
           // alert('–ù–µ–≤—ñ—Ä–Ω–∏–π –ª–æ–≥—ñ–Ω –∞–±–æ –ø–∞—Ä–æ–ª—å');
        //}
   // })
    //.catch(err => console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É –Ω–∞ –≤—Ö—ñ–¥:", err));
    
    // –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞ –ø—Ä–∏ –¥–æ—Å—Ç—É–ø—ñ –¥–æ –∑–∞—Ö–∏—â–µ–Ω–∏—Ö –º–∞—Ä—à—Ä—É—Ç—ñ–≤
    fetch('/profile', {
        method: 'GET',
        headers: {
            'Authorization': `Bearer ${localStorage.getItem('access_token')}`
        }
    })
    .then(response => {
        console.log("üîß –°—Ç–∞—Ç—É—Å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:", response.status);
        response.json();
    })
    .then(data => {
        console.log("üîß –í—ñ–¥–ø–æ–≤—ñ–¥—å —Å–µ—Ä–≤–µ—Ä–∞ (–ø—Ä–æ—Ñ—ñ–ª—å):", data);
        if (data.id) {
            alert(`–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ, ${data.name}!`);
        } else {
            alert('–ü–æ–º–∏–ª–∫–∞ –¥–æ—Å—Ç—É–ø—É!');
        }
    })
    .catch(err => console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é:", err));
    

    // –í–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞–ø–∏—Å—É
    setTimeout(() => {
        const deleteButtons = document.querySelectorAll(".delete-btn");

        if (deleteButtons.length === 0) {
            console.log("‚ùå –ö–Ω–æ–ø–∫–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ!");
        } else {
            console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ ${deleteButtons.length} –∫–Ω–æ–ø–æ–∫ –≤–∏–¥–∞–ª–µ–Ω–Ω—è`);
        }
        
        deleteButtons.forEach(button => {
            button.addEventListener("click", function(event) {
                event.preventDefault();
                const form = this.closest("form");

                if (!form) {
                    console.error("‚ùå –§–æ—Ä–º–∞ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞!");
                    return;
                }

                const confirmDelete = confirm("–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü–µ–π –∑–∞–ø–∏—Å?");
                if (confirmDelete) {
                    console.log(`üî¥ –ù–∞–¥—Å–∏–ª–∞—î–º–æ POST-–∑–∞–ø–∏—Ç –Ω–∞: ${form.action}`);

                    fetch(form.action, {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/x-www-form-urlencoded",
                        },
                    })
                    .then(response => {
                        if (!response.ok) throw new Error(`–ü–æ–º–∏–ª–∫–∞: ${response.statusText}`);
                        console.log("‚úÖ –ó–∞–ø–∏—Å —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ");
                        form.closest("tr").remove(); // –í–∏–¥–∞–ª—è—î–º–æ –∑–∞–ø–∏—Å –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
                    })
                    .catch(error => console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –≤–∏–¥–∞–ª–µ–Ω–Ω—è:", error));
                } else {
                    console.log("‚ùå –í–∏–¥–∞–ª–µ–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ");
                }
            });
        });
        
    }, 500);
    // üîπ –°–ª–∞–π–¥–µ—Ä –≤—ñ–¥–≥—É–∫—ñ–≤
let currentReview = 0;
const reviews = document.querySelectorAll('.review-slide');

function showReview(index) {
    reviews.forEach((review, i) => {
        review.classList.remove("active");
        if (i === index) {
            review.classList.add("active");
        }
    });
}

function nextReview() {
    currentReview = (currentReview + 1) % reviews.length;
    showReview(currentReview);
}

function prevReview() {
    currentReview = (currentReview - 1 + reviews.length) % reviews.length;
    showReview(currentReview);
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–Ω—è –∫–æ–∂–Ω—ñ 5 —Å–µ–∫—É–Ω–¥
setInterval(nextReview, 5000);
});